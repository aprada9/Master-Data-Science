View(viajerosTrends)
View(naviajeros.tip)
require(cluster) # para los algoritmos PAM y CLARA
require(fpc) # idem
require(factoextra) # para visualizar
library(readr)
viajerosv5 <- read.csv("viajeros.csv")
naviajeros <- na.omit(viajerosv5)
naviajeros <- naviajeros[,4:31]
summary(naviajeros)
set.seed(123)
naviajeros.mas = naviajeros[sample(1:nrow(naviajeros), 500, replace=FALSE),]
naviajeros.tip = scale(naviajeros.mas)
summary(naviajeros.tip)
require(NbClust)
Nb.viajeros=NbClust(naviajeros.tip, distance = "euclidean", min.nc = 2, max.nc = 10, method = "complete", index ="all")
fviz_nbclust(Nb.viajeros) + theme_minimal() + labs(x="Número k de clusters", y="Frecuencia")
require(cluster)
viajeros.clara=clara(naviajeros, 2, samples=200)
require(factoextra)
fviz_cluster(viajeros.clara, stand = TRUE, geom = "point", pointsize = 1)
plot(silhouette(viajeros.clara),col = 2:3, main = "Gráfico de perfil")
require(cluster) # para los algoritmos PAM y CLARA
require(fpc) # idem
require(factoextra) # para visualizar
library(readr)
viajerosv5 <- read.csv("viajeros.csv")
naviajeros <- na.omit(viajerosv5)
naviajeros <- naviajeros[,4:31]
summary(naviajeros)
set.seed(123)
naviajeros.mas = naviajeros[sample(1:nrow(naviajeros), 500, replace=FALSE),]
naviajeros.tip = scale(naviajeros.mas)
summary(naviajeros.tip)
require(NbClust)
Nb.viajeros=NbClust(naviajeros.tip, distance = "euclidean", min.nc = 2, max.nc = 10, method = "complete", index ="all")
fviz_nbclust(Nb.viajeros) + theme_minimal() + labs(x="Número k de clusters", y="Frecuencia")
require(cluster)
viajeros.clara=clara(naviajeros, 2, samples=200)
require(factoextra)
fviz_cluster(viajeros.clara, stand = TRUE, geom = "point", pointsize = 1)
plot(silhouette(viajeros.clara),col = 2:3, main = "Gráfico de perfil")
require(cluster) # para los algoritmos PAM y CLARA
require(fpc) # idem
require(factoextra) # para visualizar
library(readr)
require(NbClust)
viajerosv5 <- read.csv("viajeros.csv")
naviajeros <- na.omit(viajerosv5)
naviajeros <- naviajeros[,4:31]
summary(naviajeros)
set.seed(123)
naviajeros.mas = naviajeros[sample(1:nrow(naviajeros), 500, replace=FALSE),]
naviajeros.tip = scale(naviajeros.mas)
summary(naviajeros.tip)
Nb.viajeros=NbClust(naviajeros.tip, distance = "euclidean", min.nc = 2, max.nc = 10, method = "complete", index ="all")
require(cluster) # para los algoritmos PAM y CLARA
require(fpc) # idem
require(factoextra) # para visualizar
library(readr)
require(NbClust)
viajerosv5 <- read.csv("viajeros.csv")
naviajeros <- na.omit(viajerosv5)
summary(naviajeros)
set.seed(1234)
viajeros.gow= naviajeros[sample(1:nrow(churn), 500, replace=FALSE),]
set.seed(1234)
viajeros.gow= naviajeros[sample(1:nrow(naviajeros), 500, replace=FALSE),]
viajeros.gow=viajeros.gow[,2:11]
# calcula la distancia de Gower para todas las variables;
gower_dist= daisy(viajeros.gow,metric = "gower")
summary(gower_dist)
graf.datos = ggplot(viajeros.gow, aes(x = OVER_15MINS_CALLS_PER_MONTH, y = AVERAGE_CALL_DURATION)) +
geom_point() +
stat_density2d(aes(color = ..level..))
graf.datos
graf.datos = ggplot(viajeros.gow, aes(x = "OVER_15MINS_CALLS_PER_MONTH", y = "AVERAGE_CALL_DURATION")) +
geom_point() +
stat_density2d(aes(color = ..level..))
graf.datos
viajeros.gow.tip=scale(churn.gow[,4:31])
viajeros.gow.tip=scale(viajeros.gow[,4:31])
viajeros.gow.tip=scale(viajeros.gow[,4:31])
set.seed(1234)
viajeros.gow= naviajeros[sample(1:nrow(naviajeros), 500, replace=FALSE),]
viajeros.gow=viajeros.gow[,1:36]
# calcula la distancia de Gower para todas las variables;
gower_dist= daisy(viajeros.gow,metric = "gower")
summary(gower_dist)
viajeros.gow.tip=scale(viajeros.gow[,4:31])
viajeros.gow.tip=cbind(viajeros.gow.tip, viajeros.gow[,1:3;31:35])
viajeros.gow.tip=scale(viajeros.gow[,4:31])
viajeros.gow.tip=cbind(viajeros.gow.tip, viajeros.gow[,1:3], viajeros.gow[31:35])
gower_dist2= daisy(viajeros.gow.tip,metric = "gower")
sil_ancho = c(NA)
for(i in 2:10){
pam_fit = pam(gower_dist2,
diss = TRUE,
k = i)
sil_ancho[i] = pam_fit$silinfo$avg.width
}
plot(1:10, sil_ancho,
xlab = "Número de clusters",
ylab = "Ancho de perfil")
lines(1:10, sil_ancho)
pam_fit = pam(gower_dist2, diss = TRUE, k = 2)
pam_fit
pam_fit$clusinfo
pam_fit$medoids
require(Rtsne)
install.packages("Rtsne")
require(Rtsne)
require(magrittr)
require(dplyr)
tsne_obj = Rtsne(gower_dist2, is_distance = TRUE)
tsne_data=tsne_obj$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit$clustering))
ggplot(aes(x = X, y = Y), data = tsne_data) +
geom_point(aes(color = cluster))
tsne_data(naviajeros, 2, samples=200)
tsne_data.clara = clara(tsne_data, 2, samples=200)
fviz_cluster(tsne_data.clara, stand = TRUE, geom = "point", pointsize = 1)
tsne_data.clara = clara(tsne_data, 3, samples=200)
fviz_cluster(tsne_data.clara, stand = TRUE, geom = "point", pointsize = 1)
View(tsne_data.clara)
View(tsne_data)
View(viajeros.gow.tip)
tsne_data.clara = clara(tsne_data, 2, samples=200)
fviz_cluster(tsne_data.clara, stand = TRUE, geom = "point", pointsize = 1)
require(cluster) # para los algoritmos PAM y CLARA
require(fpc) # idem
require(factoextra) # para visualizar
library(readr)
require(NbClust)
viajerosv5 <- read.csv("viajeros.csv")
naviajeros <- na.omit(viajerosv5)
naviajeros <- naviajeros[,4:31]
summary(naviajeros)
set.seed(123)
naviajeros.mas = naviajeros[sample(1:nrow(naviajeros), 500, replace=FALSE),]
naviajeros.tip = scale(naviajeros.mas)
summary(naviajeros.tip)
Nb.viajeros=NbClust(naviajeros.tip, distance = "euclidean", min.nc = 2, max.nc = 10, method = "complete", index ="all")
fviz_nbclust(Nb.viajeros) + theme_minimal() + labs(x="Número k de clusters", y="Frecuencia")
require(cluster)
viajeros.clara=clara(naviajeros, 2, samples=200)
require(factoextra)
fviz_cluster(viajeros.clara, stand = TRUE, geom = "point", pointsize = 1)
plot(silhouette(viajeros.clara),col = 2:3, main = "Gráfico de perfil")
viajeros.clara$medoids
clusters<-viajeros.clara$clustering
clusters<-as.data.frame(clusters)
resultado<-na.omit(viajeros)
clusters<-viajeros.clara$clustering
clusters<-as.data.frame(clusters)
resultado<-na.omit(viajerosv5)
resultado<-data.frame(resultado,clusters)
View(resultado)
summary(resultado)
resultado<-data.frame(clusters,resultado)
View(resultado)
head(resultado)
```{r}
head(resultado)
table(resultado$clusters, resultado$PAIS_RESID_AGRUP)
ggplot(data=resultado, aes(y=INGRESOS,  x=clusters, color=PAIS_RESID_AGRUP)) +
geom_point() +
theme_bw()
ggplot(data=resultado, aes(y=resultado$INGRESOS,  x=resultado$PAIS_RESID_AGRUP, color=resultado$clusters)) +
geom_point() +
theme_bw()
ggplot(data=resultado, aes(y=resultado$INGRESOS,  x=resultado$PAIS_RESID_AGRUP, color=resultado$clusters)) +
geom_point() +
theme_bw()
ggplot(data=resultado, aes(x=EDAD, y=INGRESOS, colour=PAIS_RESID_AGRUP)) + geom_point()
dfresultado = data.frame(resultado)
dfresultado = data.frame(resultado)
View(dfresultado)
dfresultado = data.frame(resultado)
ggplot(data=dfresultado, aes(x=EDAD, y=INGRESOS, colour=PAIS_RESID_AGRUP)) + geom_point()
dfresultado = data.frame(resultado)
ggplot(data=dfresultado, aes(x=EDAD, y=INGRESOS, colour=PAIS_RESID_AGRUP)) + geom_point()
require(cluster) # para los algoritmos PAM y CLARA
require(fpc) # idem
require(factoextra) # para visualizar
library(readr)
require(NbClust)
viajerosv5 <- read.csv("viajeros.csv")
naviajeros <- na.omit(viajerosv5)
naviajeros <- naviajeros[,4:31]
summary(naviajeros)
set.seed(123)
naviajeros.mas = naviajeros[sample(1:nrow(naviajeros), 500, replace=FALSE),]
naviajeros.tip = scale(naviajeros.mas)
summary(naviajeros.tip)
Nb.viajeros=NbClust(naviajeros.tip, distance = "euclidean", min.nc = 2, max.nc = 10, method = "complete", index ="all")
fviz_nbclust(Nb.viajeros) + theme_minimal() + labs(x="Número k de clusters", y="Frecuencia")
require(cluster)
viajeros.clara=clara(naviajeros, 2, samples=200)
require(factoextra)
fviz_cluster(viajeros.clara, stand = TRUE, geom = "point", pointsize = 1)
plot(silhouette(viajeros.clara),col = 2:3, main = "Gráfico de perfil")
viajeros.clara$medoids
clusters<-viajeros.clara$clustering
clusters<-as.data.frame(clusters)
resultado<-na.omit(viajerosv5)
resultado<-data.frame(clusters,resultado)
head(resultado)
table(resultado$clusters, resultado$PAIS_RESID_AGRUP)
ggplot(data=resultado, aes(y=resultado$INGRESOS,  x=resultado$PAIS_RESID_AGRUP, color=resultado$clusters)) +
geom_point() +
theme_bw()
dfresultado = data.frame(resultado)
ggplot(data=dfresultado, aes(x=EDAD, y=INGRESOS, colour=PAIS_RESID_AGRUP)) + geom_point()
ggplot(aes(x = EDAD, y = INGRESOS), data = resultado) + geom_point(aes(color = clusters))
ggplot(aes(x = INGRESOS, y = EDAD), data = resultado) + geom_point(aes(color = clusters))
ggplot(aes(x = clusters, y = EDAD), data = resultado) + geom_point(aes(color = clusters))
ggplot(aes(x = clusters, y = EDAD), data = resultado) + geom_point(aes(color = PAIS_RESID_AGRUP))
ggplot(data=resultado, aes(y=INGRESOS,  x=clusters, color=PAIS_RESID_AGRUP)) +
geom_point() +
theme_bw()
ggplot(data=resultado, aes(y=INGRESOS,  x=clusters)) +
geom_point() +
theme_bw()
ggplot(data=resultado, aes(y=INGRESOS,  x=clusters, color=PAIS_RESID_AGRUP)) +
geom_point() +
theme_bw()
table(resultado$clusters, resultado$PAIS_RESID_AGRUP)
table(resultado$clusters, resultado$INGRESOS)
table(resultado$clusters, resultado$IMPRESION)
table(resultado$clusters, resultado$EDAD)
table(resultado$clusters, resultado$OCUPACION)
table(resultado$clusters, resultado$ALOJ_CATEG_1)
table(resultado$clusters, resultado$SEXO)
table(resultado$EDAD, resultado$clusters)
table(resultado$EDAD, resultado$clusters)
ggplot(aes(x = clusters, y = EDAD), data = resultado)
table(resultado$EDAD, resultado$clusters)
ggplot(aes(x = clusters, y = EDAD), data = resultado) +
geom_point()
table(resultado$EDAD, resultado$clusters)
ggplot(aes(x = clusters, y = EDAD), data = resultado) +
geom_point(size = 3)
ggplot(aes(x = clusters, y = EDAD), data = resultado) +
geom_point(size = 1)
ggplot(aes(x = clusters, y = EDAD), data = resultado) +
geom_point(size = 0,004)
ggplot(aes(x = clusters, y = EDAD), data = resultado) +
geom_point(size = 0.004)
ggplot(aes(x = clusters, y = EDAD), data = resultado) +
geom_point(size = 0.004, alpha=0.08)
ggplot(aes(x = clusters, y = EDAD), data = resultado) +
geom_point(size = 4, alpha=0.08)
ggplot(aes(x = clusters, y = EDAD), data = resultado) +
geom_point(size = 4, alpha=0.00008)
ggplot(aes(x = clusters, y = EDAD), data = resultado) +
geom_point(size = 4, alpha=0.008)
ggplot(aes(x = clusters, y = INGRESOS), data = resultado) +
geom_point(size = 4, alpha=0.008)
ggplot(aes(x = clusters, y = INGRESOS), data = resultado) +
geom_point(size = 4, alpha=0.008)
ggplot(aes(x = clusters, y = INGRESOS), data = resultado) +
geom_point(size = 4, alpha=0.0008)
ggplot(aes(x = clusters, y = INGRESOS), data = resultado) +
geom_point(size = 4, alpha=0.001)
ggplot(aes(x = clusters, y = INGRESOS), data = resultado) +
geom_point(size = 4, alpha=0.009)
ggplot(aes(x = clusters, y = INGRESOS), data = resultado) +
geom_point(size = 4, alpha=0.003)
ggplot(aes(x = clusters, y = INGRESOS), data = resultado) +
geom_point(size = 4, alpha=0.003), position="jitter"
ggplot(aes(x = clusters, y = INGRESOS), data = resultado) +
geom_point(size = 4, alpha=0.003 , position="jitter")
ggplot(aes(x = clusters, y = INGRESOS), data = resultado) +
geom_point(size = 4, alpha=0.3 , position="jitter")
ggplot(aes(x = clusters, y = INGRESOS), data = resultado) +
geom_point(size = 4, alpha=0.3 , position="jitter")
ggplot(aes(x = clusters, y = PAIS_RESID_AGRUP), data = resultado) +
geom_point(size = 4, alpha=0.3 , position="jitter")
ggplot(aes(x = clusters, y = PAIS_RESID_AGRUP), data = resultado, colour = EDAD) +
geom_point(size = 4, alpha=0.3 , position="jitter")
ggplot(aes(x = clusters, y = PAIS_RESID_AGRUP), data = resultado, colour = 'red') +
geom_point(size = 4, alpha=0.3 , position="jitter")
ggplot(aes(x = clusters, y = PAIS_RESID_AGRUP), data = resultado, colour = 'red') +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = 'red')
ggplot(aes(x = clusters, y = PAIS_RESID_AGRUP), data = resultado, colour = 'red') +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = EDAD)
ggplot(aes(x = clusters, y = PAIS_RESID_AGRUP), data = resultado, colour = 'red') +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = 'blue')
ggplot(aes(x = clusters, y = PAIS_RESID_AGRUP), data = resultado, colour = 'red') +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = 'green')
ggplot(aes(x = clusters, y = PAIS_RESID_AGRUP), data = resultado, colour = 'red') +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = 'dark blue')
require(cluster) # para los algoritmos PAM y CLARA
require(fpc) # idem
require(factoextra) # para visualizar
library(readr)
require(NbClust)
viajerosv5 <- read.csv("viajeros.csv")
naviajeros <- na.omit(viajerosv5)
naviajeros <- naviajeros[,4:31]
summary(naviajeros)
set.seed(123)
naviajeros.mas = naviajeros[sample(1:nrow(naviajeros), 500, replace=FALSE),]
naviajeros.tip = scale(naviajeros.mas)
summary(naviajeros.tip)
Nb.viajeros=NbClust(naviajeros.tip, distance = "euclidean", min.nc = 2, max.nc = 10, method = "complete", index ="all")
require(cluster) # para los algoritmos PAM y CLARA
require(fpc) # idem
require(factoextra) # para visualizar
library(readr)
require(NbClust)
viajerosv5 <- read.csv("viajeros.csv")
naviajeros <- na.omit(viajerosv5)
naviajeros <- naviajeros[,4:31]
summary(naviajeros)
set.seed(123)
naviajeros.mas = naviajeros[sample(1:nrow(naviajeros), 500, replace=FALSE),]
naviajeros.tip = scale(naviajeros.mas)
summary(naviajeros.tip)
Nb.viajeros=NbClust(naviajeros.tip, distance = "euclidean", min.nc = 2, max.nc = 10, method = "complete", index ="all")
fviz_nbclust(Nb.viajeros) + theme_minimal() + labs(x="Número k de clusters", y="Frecuencia")
require(cluster)
viajeros.clara=clara(naviajeros, 2, samples=200)
require(factoextra)
fviz_cluster(viajeros.clara, stand = TRUE, geom = "point", pointsize = 1)
plot(silhouette(viajeros.clara),col = 2:3, main = "Gráfico de perfil")
viajeros.clara$medoids
clusters<-viajeros.clara$clustering
clusters<-as.data.frame(clusters)
resultado<-na.omit(viajerosv5)
resultado<-data.frame(clusters,resultado)
head(resultado)
table(resultado$clusters, resultado$PAIS_RESID_AGRUP)
ggplot(aes(x = clusters, y = PAIS_RESID_AGRUP), data = resultado, colour = 'red') +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = 'dark blue')
table(resultado$clusters, resultado$INGRESOS)
ggplot(aes(x = clusters, y = INGRESOS), data = resultado) +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = 'dark blue'))
require(cluster) # para los algoritmos PAM y CLARA
require(fpc) # idem
require(factoextra) # para visualizar
library(readr)
require(NbClust)
viajerosv5 <- read.csv("viajeros.csv")
naviajeros <- na.omit(viajerosv5)
naviajeros <- naviajeros[,4:31]
summary(naviajeros)
set.seed(123)
naviajeros.mas = naviajeros[sample(1:nrow(naviajeros), 500, replace=FALSE),]
naviajeros.tip = scale(naviajeros.mas)
summary(naviajeros.tip)
Nb.viajeros=NbClust(naviajeros.tip, distance = "euclidean", min.nc = 2, max.nc = 10, method = "complete", index ="all")
fviz_nbclust(Nb.viajeros) + theme_minimal() + labs(x="Número k de clusters", y="Frecuencia")
require(cluster)
viajeros.clara=clara(naviajeros, 2, samples=200)
require(factoextra)
fviz_cluster(viajeros.clara, stand = TRUE, geom = "point", pointsize = 1)
plot(silhouette(viajeros.clara),col = 2:3, main = "Gráfico de perfil")
viajeros.clara$medoids
clusters<-viajeros.clara$clustering
clusters<-as.data.frame(clusters)
resultado<-na.omit(viajerosv5)
resultado<-data.frame(clusters,resultado)
head(resultado)
table(resultado$clusters, resultado$PAIS_RESID_AGRUP)
ggplot(aes(x = clusters, y = PAIS_RESID_AGRUP), data = resultado, colour = 'red') +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = 'dark blue')
table(resultado$clusters, resultado$INGRESOS)
ggplot(aes(x = clusters, y = INGRESOS), data = resultado) +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = 'dark blue')
table(resultado$clusters, resultado$IMPRESION)
ggplot(aes(x = clusters, y = IMPRESION), data = resultado) +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = 'dark blue')
table(resultado$EDAD, resultado$clusters)
ggplot(aes(x = clusters, y = EDAD), data = resultado) +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = 'dark blue')
table(resultado$clusters, resultado$OCUPACION)
ggplot(aes(x = clusters, y = OCUPACION), data = resultado) +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = 'dark blue')
table(resultado$clusters, resultado$ALOJ_CATEG_1)
ggplot(aes(x = clusters, y = ALOJ_CATEG_1), data = resultado) +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = 'dark blue')
table(resultado$clusters, resultado$SEXO)
ggplot(aes(x = clusters, y = SEXO), data = resultado) +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = ALOJ_CATEG_1), data = resultado) +
geom_point(size = 4, alpha=0.03 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = ALOJ_CATEG_1), data = resultado) +
geom_point(size = 4, alpha=0.09 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = PAIS_RESID_AGRUP), data = resultado, colour = 'red') +
geom_point(size = 4, alpha=0.2 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = PAIS_RESID_AGRUP), data = resultado, colour = 'red') +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = INGRESOS), data = resultado) +
geom_point(size = 4, alpha=0.2 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = IMPRESION), data = resultado) +
geom_point(size = 4, alpha=0.2 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = EDAD), data = resultado) +
geom_point(size = 4, alpha=0.2 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = OCUPACION), data = resultado) +
geom_point(size = 4, alpha=0.2 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = OCUPACION), data = resultado) +
geom_point(size = 4, alpha=0.1 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = OCUPACION), data = resultado) +
geom_point(size = 4, alpha=0.15 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = SEXO), data = resultado) +
geom_point(size = 4, alpha=0.2 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = VAORACION_TRATO_ALOJ), data = resultado) +
geom_point(size = 4, alpha=0.2 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = VALORACION_TRATO_ALOJ), data = resultado) +
geom_point(size = 4, alpha=0.2 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = VALORACION_ALOJ), data = resultado) +
geom_point(size = 4, alpha=0.2 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = VALORACION_GASTRONO_ALOJ), data = resultado) +
geom_point(size = 4, alpha=0.2 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = VALORACION_LIMPIEZA), data = resultado) +
geom_point(size = 4, alpha=0.2 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = VALORACION_OFERTA_GASTR_LOC), data = resultado) +
geom_point(size = 4, alpha=0.2 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = VALORACION_PRECIO_RESTAUR), data = resultado) +
geom_point(size = 4, alpha=0.2 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = VALORACION_AMBIENTE_NOCTURNO), data = resultado) +
geom_point(size = 4, alpha=0.2 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = CALORACION_EXCURSIONES), data = resultado) +
geom_point(size = 4, alpha=0.2 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = VALORACION_EXCURSIONES), data = resultado) +
geom_point(size = 4, alpha=0.2 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = SEXO), data = resultado) +
geom_point(size = 4, alpha=0.5 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = SEXO), data = resultado) +
geom_point(size = 4, alpha=0.35 , position="jitter",  colour = 'dark blue')
require(cluster)
viajeros.clara=clara(naviajeros, 2, samples=200)
require(factoextra)
fviz_cluster(viajeros.clara, stand = TRUE, geom = "point", pointsize = 1)
ggplot(aes(x = clusters, y = PAIS_RESID_AGRUP["1","2","3","4"]), data = resultado, colour = 'red') +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = PAIS_RESID_AGRUP[1="1",2="2",3="3",4="4"]), data = resultado, colour = 'red') +
ggplot(aes(x = clusters, y = PAIS_RESID_AGRUP), data = resultado, colour = 'red') +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = 'dark blue')
ggplot(aes(x = clusters, y = PAIS_RESID_AGRUP), data = resultado, colour = 'red') +
geom_point(size = 4, alpha=0.3 , position="jitter",  colour = 'dark blue')
require(cluster) # para los algoritmos PAM y CLARA
require(fpc) # idem
require(factoextra) # para visualizar
library(readr)
require(NbClust)
viajerosv5 <- read.csv("viajeros.csv")
naviajeros <- na.omit(viajerosv5)
naviajeros <- naviajeros[,4:31]
summary(naviajeros)
set.seed(300)
naviajeros.mas = naviajeros[sample(1:nrow(naviajeros), 500, replace=FALSE),]
naviajeros.tip = scale(naviajeros.mas)
summary(naviajeros.tip)
Nb.viajeros=NbClust(naviajeros.tip, distance = "euclidean", min.nc = 2, max.nc = 10, method = "complete", index ="all")
fviz_nbclust(Nb.viajeros) + theme_minimal() + labs(x="Número k de clusters", y="Frecuencia")
require(cluster)
viajeros.clara=clara(naviajeros, 2, samples=200)
require(factoextra)
fviz_cluster(viajeros.clara, stand = TRUE, geom = "point", pointsize = 1)
require(cluster)
viajeros.clara=clara(naviajeros, 3, samples=200)
require(factoextra)
fviz_cluster(viajeros.clara, stand = TRUE, geom = "point", pointsize = 1)
plot(silhouette(viajeros.clara),col = 2:3, main = "Gráfico de perfil")
plot(silhouette(viajeros.clara),col = 2:4, main = "Gráfico de perfil")
require(cluster) # para los algoritmos PAM y CLARA
require(fpc) # idem
require(factoextra) # para visualizar
library(readr)
require(NbClust)
viajerosv5 <- read.csv("viajeros.csv")
naviajeros <- na.omit(viajerosv5)
naviajeros <- naviajeros[,4:31]
summary(naviajeros)
set.seed(400)
naviajeros.mas = naviajeros[sample(1:nrow(naviajeros), 500, replace=FALSE),]
naviajeros.tip = scale(naviajeros.mas)
summary(naviajeros.tip)
Nb.viajeros=NbClust(naviajeros.tip, distance = "euclidean", min.nc = 2, max.nc = 10, method = "complete", index ="all")
fviz_nbclust(Nb.viajeros) + theme_minimal() + labs(x="Número k de clusters", y="Frecuencia")
require(cluster)
viajeros.clara=clara(naviajeros, 4, samples=200)
require(factoextra)
fviz_cluster(viajeros.clara, stand = TRUE, geom = "point", pointsize = 1)
plot(silhouette(viajeros.clara),col = 2:4, main = "Gráfico de perfil")
require(cluster) # para los algoritmos PAM y CLARA
require(fpc) # idem
require(factoextra) # para visualizar
library(readr)
require(NbClust)
viajerosv5 <- read.csv("viajeros.csv")
naviajeros <- na.omit(viajerosv5)
naviajeros <- naviajeros[,4:31]
summary(naviajeros)
set.seed(1000)
naviajeros.mas = naviajeros[sample(1:nrow(naviajeros), 500, replace=FALSE),]
naviajeros.tip = scale(naviajeros.mas)
summary(naviajeros.tip)
Nb.viajeros=NbClust(naviajeros.tip, distance = "euclidean", min.nc = 2, max.nc = 10, method = "complete", index ="all")
fviz_nbclust(Nb.viajeros) + theme_minimal() + labs(x="Número k de clusters", y="Frecuencia")
require(cluster)
viajeros.clara=clara(naviajeros, 2, samples=200)
require(factoextra)
fviz_cluster(viajeros.clara, stand = TRUE, geom = "point", pointsize = 1)
plot(silhouette(viajeros.clara),col = 2:4, main = "Gráfico de perfil")
plot(silhouette(viajeros.clara),col = 2:3, main = "Gráfico de perfil")
fviz_silhouette(silhouette(viajeros.clara))
