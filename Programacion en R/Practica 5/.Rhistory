Baloncesto <- subset(student_census, Physical == "Basketball" )
subset(student_census, Physical == "Basketball" )
Baloncesto <- subset(student_census, Physical == "Basketball" )
View(Baloncesto)
peso<-student_census$Height[1:200]
altura<-student_census$Arm.Span[1:200]
pie<-student_census$Foot.Size[1:200]
tabla<-data.frame(peso,altura,pie)
correlaciones<-cor(tabla)
correlaciones
provincias<-student_census$Province[1:200]
tabla<-data.frame(peso,altura,pie,provincias)
tabla
tabla(order(tabla[,2]))
View(student_census)
max(tabla$altura)
View(student_census)
max(tabla$altura)
peso<-student_census$Height[1:200]
altura<-student_census$Arm.Span[1:200]
pie<-student_census$Foot.Size[1:200]
tabla<-data.frame(peso,altura,pie)
View(tabla)
correlaciones<-cor(tabla)
correlaciones
toe<-c(pie)
tall<-c(altura)
height<-c(peso)
ii<-order(tall,height,toe)
rbind(height,tall,toe)[,ii]
cbind(height,tall,toe)[,ii]
cbind(tall,height,toe)[ii,]
plot(student_census$Province)
toe<-c(pie)
tall<-c(altura)
height<-c(peso)
ii<-order(tall,height,toe)
rbind(height,tall,toe)[,ii]
cbind(height,tall,toe)[,ii]
cbind(tall,height,toe)[ii,]
cbind(tall,height,toe)[,ii]
cbind(tall,height,toe)[ii, ]
cbind(height,tall,toe)[,ii]
plot(student_census$Province)
plot(cars, main = "Province")
plot(student_census, main = "Province")
plot(student_census$Province)
barplot(prop.table(table(student_census$Province)))
barplot(prop.table(tabla(student_census$Province)))
provincia<-student_census$Province[1:200]
tabla<-data.frame(peso,altura,pie,provincia)
rm(tabla)
peso<-student_census$Height[1:200]
altura<-student_census$Arm.Span[1:200]
pie<-student_census$Foot.Size[1:200]
tabla<-data.frame(peso,altura,pie)
peso<-student_census$Height[1:200]
altura<-student_census$Arm.Span[1:200]
pie<-student_census$Foot.Size[1:200]
provincia<-student_census$Province[1:200]
tabla2<-data.frame(peso,altura,pie,provincia)
barplot(prop.table(table(tabla2$provincia)))
View(tabla2)
barplot(prop.table(table(student_census$Province)))
barplot(prop.table(table(student_census$Province)))
barplot(prop.table(table(tabla2$provincia)))
barplot(prop.table(table(student_census$Province)))
x<- c(1:80, 78:34, 1,2,3,4,5,6,7,5,4,3,2)
n<-5
divideenBloques <- function( x, n ){
tam<-length(x)%/%n
list<-NULL
for (i in 0:(n-2)){
list<-c(list,c(i*tam+1, (i+1)*tam))
}
list<-c(list,c(((i+1)*tam)+1, length(x)))
return(list)
}
lista<-divideenBloques(x,n)
i<-1
pares_sumas<-function (lista, x, n){
sumas<-NULL
tams<-NULL
for (i in 0:(n-1)){
ini<-lista[i*2+1]
fin<-lista[i*2+2]
sumas<-c(sumas, sum(x[ini:fin]))
tams<-c(tams,fin-ini+1)
}
return(data.frame(sumas, tams))
}
ps<-pares_sumas(lista, x, n)
reduce<-function(ps){
resultado<- as.double(sum(ps$sumas)/sum(ps$tams))
return(resultado)
}
resultado_media<-reduce(ps)
save.image("~/Documents/CUNEF/Programacion en R/RSTUDIO/Proyectos/Practica 5/Environment P5.RData")
[(l,h)|h<-[0..51], l<-[0..h-1], sum[l..h]==100]
busca <- function (l, h, st){
if (l<=st) {if (sum(l:h) ==st) {print(c(l, h))
return(busca(l+1,l+1,st))}
else {if (sum(l:h)<st) return(busca(l, h+1, st))
else return(busca(l+1, l+1, st))}
}
}
busca(0,100, 100)
save.image("~/Documents/CUNEF/Programacion en R/RSTUDIO/Proyectos/Practica 5/Environment P5.RData")
library(readr)
student_census <- read_csv('student_census.csv')
Baloncesto <- subset(student_census, Physical == "Basketball" )
peso<-student_census$Height[1:200]
altura<-student_census$Arm.Span[1:200]
pie<-student_census$Foot.Size[1:200]
tabla<-data.frame(peso,altura,pie)
correlaciones<-cor(tabla)
correlaciones
toe<-c(pie)
tall<-c(altura)
height<-c(peso)
ii<-order(tall,height,toe)
rbind(height,tall,toe)[,ii]
cbind(height,tall,toe)[,ii]
cbind(tall,height,toe)[ii, ]
cbind(height,tall,toe)[,ii]
cbind(tall,height,toe)[ii, ]
provincia<-student_census$Province[1:200]
tabla2<-data.frame(peso,altura,pie,provincia)
barplot(prop.table(table(student_census$Province)))
barplot(prop.table(table(tabla2$provincia)))
l<-split(student_census, sample(rep(1:20,10,replace=F)))
l[[1]]
l1<-order(listas[[1]]$Height)
l[[1]]<-l[[1]][with(l[[1]],order(l[[1]]$Height) ),]
for (i in 1:20){
l[[i]]<-l[[i]][with(l[[i]],order(l[[i]]$Height) ),]
}
l[[1]]<-l[[1]][with(l[[1]],order(l[[1]]$Height) ),]
for (i in 1:20){
l[[i]]<-l[[i]][with(l[[i]],order(l[[i]]$Height) ),]
}
l[[1]]
l[[6]]
x<- c(1:80, 78:34, 1,2,3,4,5,6,7,5,4,3,2)
n<-5
divideenBloques <- function( x, n ){
tam<-length(x)%/%n
list<-NULL
for (i in 0:(n-2)){
list<-c(list,c(i*tam+1, (i+1)*tam))
}
list<-c(list,c(((i+1)*tam)+1, length(x)))
return(list)
}
lista<-divideenBloques(x,n)
i<-1
pares_sumas<-function (lista, x, n){
sumas<-NULL
tams<-NULL
for (i in 0:(n-1)){
ini<-lista[i*2+1]
fin<-lista[i*2+2]
sumas<-c(sumas, sum(x[ini:fin]))
tams<-c(tams,fin-ini+1)
}
return(data.frame(sumas, tams))
}
ps<-pares_sumas(lista, x, n)
reduce<-function(ps){
resultado<- as.double(sum(ps$sumas)/sum(ps$tams))
return(resultado)
}
resultado_media<-reduce(ps)
busca <- function (l, h, st){
if (l<=st) {if (sum(l:h) ==st) {print(c(l, h))
return(busca(l+1,l+1,st))}
else {if (sum(l:h)<st) return(busca(l, h+1, st))
else return(busca(l+1, l+1, st))}
}
}
busca(0,100, 100)
tabla[order(tabla$altura.Length),]
tabla[order(tabla$altura),]
correlaciones<-cor(tabla)
correlaciones
provincia<-student_census$Province[1:200]
tabla2<-data.frame(peso,altura,pie,provincia)
save.image("~/Documents/CUNEF/Programacion en R/RSTUDIO/Proyectos/Practica 5/Environment P5.RData")
library(readr)
student_census <- read_csv('student_census.csv')
x<-c()
for (i in 1:nrow(student_census)){
if (student_census$Physical[i]=='Basketball'){
x<-c(x,i)
}
}
x
posicion<-sample(1:length(x),5,rplace = F)
equipo<-c()
for(i in 1:length(posicion)){
equipo<-c(equipo,x[posicion[i]])
}
equipo
library(readr)
student_census <- read_csv('student_census.csv')
x<-c()
for (i in 1:nrow(student_census)){
if (student_census$Physical[i]=='Basketball'){
x<-c(x,i)
}
}
x
posicion<-sample(1:length(x),5,replace = F)
equipo<-c()
for(i in 1:length(posicion)){
equipo<-c(equipo,x[posicion[i]])
}
equipo
peso<-student_census$Height[1:200]
altura<-student_census$Arm.Span[1:200]
pie<-student_census$Foot.Size[1:200]
tabla<-data.frame(peso,altura,pie)
correlaciones<-cor(tabla)
correlaciones
#creamos un grÃ¡fico de barras con barplot
provincia<-student_census$Province[1:200]
tabla2<-data.frame(peso,altura,pie,provincia)
#metodo 1:
barplot(prop.table(table(student_census$Province)))
#metodo 2:
barplot(prop.table(table(tabla2$provincia)))
correlaciones<-cor(tabla)
correlaciones
#creamos tres vectores y un nuevo objeto definido por nuestros tres vectores denominada ii lo ordeamos por la funcion
#order poniendo como primer elemento aquel que queremos que ordene el objeto.
toe<-c(pie)
tall<-c(altura)
height<-c(peso)
ii<-order(tall,height,toe)
rbind(height,tall,toe)[,ii]
cbind(tall,height,toe)[ii, ]
agrupar<-function(df1,df2){
union<-rbind(df1,df2)
union<-union[with(union,order(union$Height)),]
return(union)
}
agrupar(l[[1]],l[[2]])
agrupar<-function(df1,df2){
union<-rbind(df1,df2)
union<-union[with(union,order(union$Height) ),]
return(union)
}
agrupar(l[[1]],l[[2]])
l<-split(student_census, sample(rep(1:20,10,replace=F)))
l[[1]]
l1<-order(listas[[1]]$Height)
l[[1]]<-l[[1]][with(l[[1]],order(l[[1]]$Height) ),]
for (i in 1:20){
l[[i]]<-l[[i]][with(l[[i]],order(l[[i]]$Height) ),]
}
l<-split(student_census, sample(rep(1:20,10,replace=F)))
l[[1]]
l1<-order(lista[[1]]$Height)
l[[1]]<-l[[1]][with(l[[1]],order(l[[1]]$Height) ),]
for (i in 1:20){
l[[i]]<-l[[i]][with(l[[i]],order(l[[i]]$Height) ),]
}
l<-split(student_census, sample(rep(1:20,10,replace=F)))
l[[1]]
l1<-order(student_census[[1]]$Height)
l[[1]]<-l[[1]][with(l[[1]],order(l[[1]]$Height) ),]
for (i in 1:20){
l[[i]]<-l[[i]][with(l[[i]],order(l[[i]]$Height) ),]
}
l<-split(student_census, sample(rep(1:20,10,replace=F)))
l[[1]]
l1<-order(listas[[1]]$Height)
l[[1]]<-l[[1]][with(l[[1]],order(l[[1]]$Height) ),]
for (i in 1:20){
l[[i]]<-l[[i]][with(l[[i]],order(l[[i]]$Height) ),]
}
listas<-[]
l<-split(student_census, sample(rep(1:20,10,replace=F)))
l[[1]]
l1<-order(listas[[1]]$Height)
l[[1]]<-l[[1]][with(l[[1]],order(l[[1]]$Height) ),]
for (i in 1:20){
l[[i]]<-l[[i]][with(l[[i]],order(l[[i]]$Height) ),]
}
l<-split(student_census, sample(rep(1:20,10,replace=F)))
l[[1]]
l1<-order(listas[[1]]$Height)
l[[1]]<-l[[1]][with(l[[1]],order(l[[1]]$Height) ),]
for (i in 1:20){
l[[i]]<-l[[i]][with(l[[i]],order(l[[i]]$Height) ),]
}
l<-split(student_census, sample(rep(1:20,10,replace=F)))
l[[1]]
l1<-order(l[[1]]$Height)
l[[1]]<-l[[1]][with(l[[1]],order(l[[1]]$Height) ),]
for (i in 1:20){
l[[i]]<-l[[i]][with(l[[i]],order(l[[i]]$Height) ),]
}
agrupar<-function(df1,df2){
union<-rbind(df1,df2)
union<-union[with(union,order(union$Height) ),]
return(union)
}
agrupar(l[[1]],l[[2]])
l[[1]]
l1<-order(l[[1]]$Height)
l[[1]]<-l[[1]][with(l[[1]],order(l[[1]]$Height) ),]
for (i in 1:20){
l[[i]]<-l[[i]][with(l[[i]],order(l[[i]]$Height) ),]
}
l
agrupar<-function(df1,df2){
union<-rbind(df1,df2)
union<-union[with(union,order(union$Height) ),]
return(union)
}
agrupar(l[[1]],l[[2]])
df<-NULL
for (i in 1:20) {
df<-agrupar(df,l[[i]])
}
View(df)
unique(student_census$Physical)
d<-split((student_census, student_census$Physical))
unique(student_census$Physical)
d<-split(student_census, student_census$Physical)
unique(student_census$Physical)
d<-split(student_census, student_census$Physical)
x<- c(1:80, 78:34, 1,2,3,4,5,6,7,5,4,3,2)
n<-5
divideenBloques <- function( x, n ){
tam<-length(x)%/%n
list<-NULL
for (i in 0:(n-2)){
list<-c(list,c(i*tam+1, (i+1)*tam))
}
list<-c(list,c(((i+1)*tam)+1, length(x)))
return(list)
}
lista<-divideenBloques(x,n)
i<-1
pares_sumas<-function (lista, x, n){
sumas<-NULL
tams<-NULL
for (i in 0:(n-1)){
ini<-lista[i*2+1]
fin<-lista[i*2+2]
sumas<-c(sumas, sum(x[ini:fin]))
tams<-c(tams,fin-ini+1)
}
return(data.frame(sumas, tams))
}
ps<-pares_sumas(lista, x, n)
reduce<-function(ps){
resultado<- as.double(sum(ps$sumas)/sum(ps$tams))
return(resultado)
}
resultado_media<-reduce(ps)
busca <- function (l, h, st){
if (l<=st) {if (sum(l:h) ==st) {print(c(l, h))
return(busca(l+1,l+1,st))}
else {if (sum(l:h)<st) return(busca(l, h+1, st))
else return(busca(l+1, l+1, st))}
}
}
busca(0,100, 100)
library(readr)
student_census <- read_csv('student_census.csv')
x<-c()
for (i in 1:nrow(student_census)){
if (student_census$Physical[i]=='Basketball'){
x<-c(x,i)
}
}
x
posicion<-sample(1:length(x),5,replace = F)
equipo<-c()
for(i in 1:length(posicion)){
equipo<-c(equipo,x[posicion[i]])
}
equipo
peso<-student_census$Height[1:200]
altura<-student_census$Arm.Span[1:200]
pie<-student_census$Foot.Size[1:200]
tabla<-data.frame(peso,altura,pie)
correlaciones<-cor(tabla)
correlaciones
provincia<-student_census$Province[1:200]
tabla2<-data.frame(peso,altura,pie,provincia)
#metodo 1:
barplot(prop.table(table(student_census$Province)))
#metodo 2:
barplot(prop.table(table(tabla2$provincia)))
correlaciones<-cor(tabla)
correlaciones
# A continuaciÃ³n creamos tres vectores y un nuevo objeto definido por nuestros
# tres vectores denominada ii lo ordeamos por la funcionorder poniendo como
# primer elemento aquel que queremos que ordene el objeto.
toe<-c(pie)
tall<-c(altura)
height<-c(peso)
ii<-order(tall,height,toe)
rbind(height,tall,toe)[,ii]
cbind(tall,height,toe)[ii, ]
peso<-student_census$Height[1:200]
altura<-student_census$Arm.Span[1:200]
pie<-student_census$Foot.Size[1:200]
tabla<-data.frame(peso,altura,pie)
correlaciones<-cor(tabla)
correlaciones
#creamos un grÃ¡fico de barras con barplot
provincia<-student_census$Province[1:200]
tabla2<-data.frame(peso,altura,pie,provincia)
#metodo 1:
barplot(prop.table(table(student_census$Province)))
#metodo 2:
barplot(prop.table(table(tabla2$provincia)))
correlaciones<-cor(tabla)
correlaciones
# A continuaciÃ³n creamos tres vectores y un nuevo objeto definido por nuestros
# tres vectores denominada ii lo ordeamos por la funcionorder poniendo como
# primer elemento aquel que queremos que ordene el objeto.
toe<-c(pie)
tall<-c(altura)
height<-c(peso)
ii<-order(tall,height,toe)
rbind(height,tall,toe)[,ii]
cbind(tall,height,toe)[ii, ]
## EJERCICIO 3
#se divide el data.frame en 20 listas diferentes aleatoriamente con la funcion sample
l<-split(student_census, sample(rep(1:20,10,replace=F)))
l[[1]]
l1<-order(l[[1]]$Height)
l[[1]]<-l[[1]][with(l[[1]],order(l[[1]]$Height) ),]
for (i in 1:20){
l[[i]]<-l[[i]][with(l[[i]],order(l[[i]]$Height) ),]
}
l
#definimos una funciÃ³n para agrupar
agrupar<-function(df1,df2){
union<-rbind(df1,df2)
union<-union[with(union,order(union$Height) ),]
return(union)
}
agrupar(l[[1]],l[[2]])
df<-NULL
for (i in 1:20) {
df<-agrupar(df,l[[i]])
}
l<-split(student_census, sample(rep(1:20,10,replace=F)))
l[[1]]
l1<-order(l[[1]]$Height)
l[[1]]<-l[[1]][with(l[[1]],order(l[[1]]$Height) ),]
for (i in 1:20){
l[[i]]<-l[[i]][with(l[[i]],order(l[[i]]$Height) ),]
}
l
# en el siguiente paso definimos una funciÃ³n que lo agrupe:
agrupar<-function(df1,df2){
union<-rbind(df1,df2)
union<-union[with(union,order(union$Height) ),]
return(union)
}
agrupar(l[[1]],l[[2]])
df<-NULL
for (i in 1:20) {
df<-agrupar(df,l[[i]])
}
View(df)
x<- c(1:80, 78:34, 1,2,3,4,5,6,7,5,4,3,2)
n<-5
divideenBloques <- function( x, n ){
tam<-length(x)%/%n
list<-NULL
for (i in 0:(n-2)){
list<-c(list,c(i*tam+1, (i+1)*tam))
}
list<-c(list,c(((i+1)*tam)+1, length(x)))
return(list)
}
lista<-divideenBloques(x,n)
lista
busca <- function (l, h, st) {
if (l <= st) {
if (sum(l:h) == st) {
print(c(l, h))
return(busca(l + 1, l + 1, st))
}
else {
if (sum(l:h) < st)
return(busca(l, h + 1, st))
else
return(busca(l + 1, l + 1, st))
}
}
}
busca(0,100, 100)
busca(0,10, 100)
busca(0,20, 100)
busca(0,20, 10)
busca(0,10, 10)
sum(0:10)
sum(1,4)
sum(1:4)
sum(18:22)
sum(9:16)
sum(9:17)
