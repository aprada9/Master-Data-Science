{
    "collab_server" : "",
    "contents" : "\n############Saber si un número es par\npar<-function(n){\n  if (n%%2==0)  {\n    sol<-\"el número es par\"}\n  else {sol<-\"el número es impar\"}\n  return(sol)\n}\npar(27)\npar(28)\n\n\n\n###########Saber si un número es par (2)\npar2<-function(n){\n  if (n%%2==0) {\n    sol<-\"el número es par\"}\n    else {sol<-\"el número es impar\"}\n    return (sol)\n}\npar2(27)\npar2(28)\n\n\n\n######### Cálculo del factorial de 8\n\nfactorial <- function(n){\n  if (n<0) {f<-\"el número debe ser positivo o cero\"}\n  else{\n  f<-1\n  while (n>0)\n  {\n    f<-f*n\n    n<-n-1\n  }}\n  return(f)\n}\nfactorial(8)\nfactorial(231)\n\n#######Construir una agenda de teléfonos\n\nagenda<- function(){\n  ln<-\"Victoria\"\n  lt<-\"32995844\"\n  continuar<-\"S\";\n  while (continuar ==\"S\") {\n    nombre<- readline(prompt=\"Dime el nombre: \")\n    telefono<-readline(prompt=\"Dime el teléfono: \")\n    ln<-c(ln,nombre)\n    lt<-c(lt,telefono)\n    continuar <- readline(prompt=\"¿Continuar(S/N)? \")\n  }\n  return (data.frame(ln, lt))\n}\nagenda()\n  \n#######Añadir a una agenda de teléfonos\n\nadd.agenda<- function(agenda.ant){\n  ln<-agenda.ant$nombres\n  lt<-agenda.ant$telefonos\n  continuar<-\"S\";\n  while (continuar ==\"S\") {\n    nombre<- readline(prompt=\"Dime el nombre: \")\n    telefono<-readline(prompt=\"Dime el teléfono: \")\n    ln<-c(ln,nombre)\n    lt<-c(lt,telefono)\n    continuar <- readline(prompt=\"¿Continuar(S/N)? \")\n  }\n  return (data.frame(ln, lt))\n}\nmiagenda <add.agenda(miagenda)\n\n\n##\n\n\nadd.agenda<- function(agenda.ant){\n  ln<-agenda.ant$nombres\n  lt<-agenda.ant$telefonos\n  continuar<-\"S\";\n  while (continuar ==\"S\") {\n    nombre<- readline(prompt=\"Dime el nombre: \")\n    telefono<-readline(prompt=\"Dime el teléfono: \")\n    ln<-c(ln,nombre)\n    lt<-c(lt,telefono)\n    continuar <- readline(prompt=\"¿Continuar(S/N)? \")\n  }\n  return (data.frame(ln, lt))\n}\nmiagenda <add.agenda(miagenda)\n\n\n\ncontinuar <- readline(prompt=\"¿Continuar(S/N)? \")\nnombre <- readline(prompt=\"Dime el nombre: \")\ntelefono <- readline(prompt=\"Dime el teléfono: \")\n\n\n\n\n\n\n\n#####\n\n#####Construir una agenda de teléfonos##############\nnueva.agenda<-function(){\n  ###esta función crea una agenda \n  ###que almacenar· en un dataframe con dos campos: nombres, telefonos\n  nombres<-\"Victoria\"\n  telefonos<-\"234432234\"\n  continuar<-\"S\";\n  while (continuar ==\"S\") {\n    nombre<-readline(prompt=\"Dime el nombre: \")\n    telefono<-readline(prompt=\"Dime el teléfono: \")\n    nombres<-c(nombres,nombre)\n    telefonos<-c(telefonos,telefono)\n    continuar <- readline(prompt=\"¿Continuar(S/N)? \")\n  }\n  mdf<-data.frame(nombres, telefonos)\n  mdf$nombres<-as.character(mdf$nombres)\n  mdf$telefonos<-as.character(mdf$telefonos)\n  return (mdf)\n}\nmiagenda<-nueva.agenda()\n\n\n#####Construir una agenda de teléfonos##############\nadd.agenda<-function(agenda.ant){\n  ###esta función añade nombres y teléfonos a una agenda \n  ###que está almacenada en un dataframe con dos campos: nombres, telefonos\n  nombres<-agenda.ant$nombres\n  telefonos<-agenda.ant$telefonos\n  continuar<-\"S\";\n  while (continuar ==\"S\") {\n    nombre<-readline(prompt=\"Dime el nombre: \")\n    telefono<-readline(prompt=\"Dime el teléfono: \")\n    nombres<-c(nombres,nombre)\n    telefonos<-c(telefonos,telefono)\n    continuar <- readline(prompt=\"¿Continuar(S/N)? \")\n  }\n  return (data.frame(nombres, telefonos))\n}\n\nmiagenda2<-add.agenda(miagenda)\n\n\n#######\n\nm<-22\nn<-7\nv<-m+2\nm<-m+2\nwhile (n>1)\n{\n  m<-m+2\n  v<-c(v,m)\n  n<-n-1\n}\n\n\nprint(v) \n\n\n#######\nm<-21\nn<-7\nv<-m+2\nm<-m+2\n  if (m%%2!=0){m<-m+1}\nwhile (n>1)\n{\n  m<-m+2\n  v<-c(v,m)\n  n<-n-1\n}\n\n\nprint(v) \n\n\n### Maximo del vector\nv<-c(6,3,15,0,9,1,2,17,12)\n\nmaximo<-function(v){\n  Max<-v[i]\nn<-length(v)\nfor(i in 2:n){\n  if (v[i]>Max){Max<-v[i]}}\nreturn(Max)\n}\nmax(v)\nmaximo(v)\n\n\n\n\n#### Frecuencia de 5\nv<-c(6,5,15,3,5,3,0,5,0,0,1,6,6,5,0)\nx<-5\n\nfrecuencia<-function(v,x){\n  freq<-0\n  n<-length(v)\n  for(i in 1:n){\n    if (v[i]==x){freq<-freq++1}\n    }\n  return(freq)\n}\nfrecuencia(v,x)\n\n\n### Frecuencia máxima dentro del vector (que imprima \"El maximo de V es: \",m,\" y aparece \",f,\" veces en el vector\")\nm<-maximo(v)\nf<-frecuencia(v,m)\nsprintf(\"El maximo de V es: %d y aparece %d veces en el vector\", m, f)\n\n\n\n\n##########\n\n#contarpares<-function(v){\n#  contador<-0\n#    for (i in (1:length(v)))\n#      if (par2(v(i))==1) {contador <- contador+1}\n#        return (contador)\n#}\n#v<-c(7,3,2,6,5,9)\n#contarpares(v)\n\n\n\n",
    "created" : 1506521294448.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "168826526",
    "id" : "E94082AF",
    "lastKnownWriteTime" : 1507128333,
    "last_content_update" : 1507128333996,
    "path" : "~/Documents/CUNEF/Programacion en R/RSTUDIO/Proyectos/Practica Datasets/Practica 3/Script Práctica 3.R",
    "project_path" : "Script Práctica 3.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}